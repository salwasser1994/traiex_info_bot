import os
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import F

# --- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
API_TOKEN = os.getenv("API_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –Ω–æ–≤—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ ---
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìä –ö—É—Ä—Å—ã"), KeyboardButton(text="üì∞ –ù–æ–≤–æ—Å—Ç–∏")],
        [KeyboardButton(text="‚ùì FAQ"), KeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
        [KeyboardButton(text="üí° –°–æ–≤–µ—Ç—ã"), KeyboardButton(text="üìÖ –°–æ–±—ã—Ç–∏—è")]
    ],
    resize_keyboard=True
)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---
@dp.message(F.text == "/start")
async def start(message: Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç –±–∏—Ä–∂–∏ Traiex.\n–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ üëá",
        reply_markup=main_menu
    )

@dp.message(F.text == "üìä –ö—É—Ä—Å—ã")
async def rates(message: Message):
    await message.answer(
        "üìä –¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã Traiex:\nBTC/USDT: 65,000 $\nETH/USDT: 3,500 $"
    )

@dp.message(F.text == "üì∞ –ù–æ–≤–æ—Å—Ç–∏")
async def news(message: Message):
    await message.answer(
        "üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ Traiex:\n- –ù–æ–≤–∞—è –∞–∫—Ü–∏—è –¥–ª—è —Ç—Ä–µ–π–¥–µ—Ä–æ–≤!\n- –°–Ω–∏–∂–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–π –¥–æ 0.1%."
    )

@dp.message(F.text == "‚ùì FAQ")
async def faq(message: Message):
    await message.answer(
        "‚ùì FAQ:\n1. –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?\n2. –ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç?\n3. –ü–æ–¥–¥–µ—Ä–∂–∫–∞"
    )

@dp.message(F.text == "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support(message: Message):
    await message.answer(
        "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π: support@traiex.com\nTelegram: @TraiexSupport"
    )

@dp.message(F.text == "üí° –°–æ–≤–µ—Ç—ã")
async def tips(message: Message):
    await message.answer(
        "üí° –°–æ–≤–µ—Ç—ã —Ç—Ä–µ–π–¥–µ—Ä–∞–º:\n- –°–ª–µ–¥–∏ –∑–∞ –∫—É—Ä—Å–∞–º–∏\n- –ù–µ —Ä–∏—Å–∫—É–π –±–æ–ª—å—à–µ, —á–µ–º –º–æ–∂–µ—à—å –ø–æ–∑–≤–æ–ª–∏—Ç—å\n- –ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç–æ–ø-–ª–æ—Å—Å—ã"
    )

@dp.message(F.text == "üìÖ –°–æ–±—ã—Ç–∏—è")
async def events(message: Message):
    await message.answer(
        "üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è Traiex:\n- –í–µ–±–∏–Ω–∞—Ä –ø–æ —Ç—Ä–µ–π–¥–∏–Ω–≥—É: 28 –∞–≤–≥—É—Å—Ç–∞\n- –ö–æ–Ω–∫—É—Ä—Å —Ç—Ä–µ–π–¥–µ—Ä–æ–≤: 1 —Å–µ–Ω—Ç—è–±—Ä—è"
    )

@dp.message()
async def fallback(message: Message):
    await message.answer(
        "ü§î –Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª. –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é üëá",
        reply_markup=main_menu
    )

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
