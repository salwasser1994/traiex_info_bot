import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# FAQ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
faq_dict = {
    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π?": "–î–∞, –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –∑–∞—â–∏—â—ë–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–¥—ë–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã.",
    "–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É?": "–í—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ e-mail –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚Äî –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–æ–ø–∞–¥—ë—Ç.",
    "–ù—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å?": "–ù–µ—Ç, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ –æ –≤–ª–æ–∂–µ–Ω–∏—è—Ö.",
    "–ï—Å—Ç—å –ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∏—Å—Å–∏–∏?": "–ù–µ—Ç, –≤—Å–µ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∏ –∑–∞—Ä–∞–Ω–µ–µ —É–∫–∞–∑–∞–Ω—ã. –í—ã –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ—Ç–µ, —Å–∫–æ–ª—å–∫–æ –∏ –∑–∞ —á—Ç–æ –ø–ª–∞—Ç–∏—Ç–µ.",
    "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç?": "–î–∞, —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ –≤–∞—à–µ–º—É –∂–µ–ª–∞–Ω–∏—é, –±–µ–∑ ¬´–∑–∞–º–æ—Ä–æ–∑–∫–∏¬ª –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ä–æ–∫–æ–≤.",
    "–ê –µ—Å–ª–∏ —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?": "–ù–µ —Å—Ç—Ä–∞—à–Ω–æ üôÇ –í—Å—ë –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ —Ç–∞–∫, —á—Ç–æ–±—ã –¥–∞–∂–µ –Ω–æ–≤–∏—á–æ–∫ –º–æ–≥ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è. –ï—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.",
    "–ß—Ç–æ, –µ—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?": "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã. –î–∞–∂–µ –≤ —Å–ª—É—á–∞–µ —Å–±–æ—è –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.",
    "–ù—É–∂–Ω–æ –ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏?": "–ù–µ—Ç, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–¥–µ–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏–º —Å—á—ë—Ç–æ–º.",
    "–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏?": "–ú—ã –Ω–µ –æ–±–µ—â–∞–µ–º ¬´–∑–æ–ª–æ—Ç—ã—Ö –≥–æ—Ä¬ª, –Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.",
    "–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã?": "–≠—Ç–æ –¥–æ–≥–æ–≤–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç–µ (–∞ –∑–Ω–∞—á–∏—Ç —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–º) —É—Å—Ç–∞–Ω–æ–≤–∏–≤ –≥–∞–ª–æ—á–∫—É –≤ —Ü–µ–Ω—Ç—Ä–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∞."
}

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_current_faq = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    keyboard = [
        [KeyboardButton(text="üìä –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞"), KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
        [KeyboardButton(text="üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"), KeyboardButton(text="üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã")],
        [KeyboardButton(text="‚ú® –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä—ã—á–∞–≥–∞–º")],
        [KeyboardButton(text="–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùì")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# Inline –∫–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
def inline_back_to_menu():
    keyboard = [
        [InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    file_id = "BAACAgQAAxkDAAIEgGi5kTsunsNKCxSgT62lGkOro6iLAAI8KgACIJ7QUfgrP_Y9_DJKNgQ"
    await message.answer_video(video=file_id, reply_markup=inline_back_to_menu())

# Inline –∫–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
@dp.callback_query()
async def callbacks(callback: types.CallbackQuery):
    if callback.data == "back_to_menu":
        await callback.message.answer("–°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä", reply_markup=main_menu())
        await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é –∏ FAQ
@dp.message()
async def handle_message(message: types.Message):
    text = message.text

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª FAQ
    if text == "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùì":
        keyboard_buttons = [[KeyboardButton(q)] for q in faq_dict.keys()]
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", reply_markup=ReplyKeyboardMarkup(keyboard=keyboard_buttons, resize_keyboard=True))
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–∑ FAQ
    if text in faq_dict:
        user_id = message.from_user.id
        current = user_current_faq.get(user_id)

        # –ï—Å–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ —Ç–æ–≥–æ –∂–µ –≤–æ–ø—Ä–æ—Å–∞ ‚Üí –∑–∞–∫—Ä—ã—Ç—å
        if current == text:
            user_current_faq[user_id] = None
            keyboard_buttons = [[KeyboardButton(q)] for q in faq_dict.keys()]
            await message.answer("‚ùå –û—Ç–≤–µ—Ç —Å–∫—Ä—ã—Ç", reply_markup=ReplyKeyboardMarkup(keyboard=keyboard_buttons, resize_keyboard=True))
        else:
            # –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤–æ–ø—Ä–æ—Å–æ–º
            user_current_faq[user_id] = text
            keyboard_buttons = []
            for q in faq_dict.keys():
                keyboard_buttons.append([KeyboardButton(q)])
                if q == text:
                    keyboard_buttons.append([KeyboardButton(f"‚û§ {faq_dict[q]}")])
            await message.answer("‚úÖ –û—Ç–≤–µ—Ç:", reply_markup=ReplyKeyboardMarkup(keyboard=keyboard_buttons, resize_keyboard=True))
        return

    # –û—Å—Ç–∞–ª—å–Ω–æ–µ –º–µ–Ω—é
    if text == "üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã":
        file_id = "BQACAgQAAxkBAAIFOGi6vNHLzH9IyJt0q7_V4y73FcdrAAKXGwACeDjZUSdnK1dqaQoPNgQ"
        await message.answer_document(file_id)
    elif text == "üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å":
        keyboard = InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(
                text="–û—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",
                url="https://traiex.gitbook.io/user-guides/ru/kak-zaregistrirovatsya-na-traiex"
            )
        ]])
        await message.answer("–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é:", reply_markup=keyboard)
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
