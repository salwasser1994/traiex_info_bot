import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# --- FAQ ---
faq_data = {
    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π?": "–î–∞, –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –∑–∞—â–∏—â—ë–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–¥—ë–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã.",
    "–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É?": "–í—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ e-mail –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚Äî –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–æ–ø–∞–¥—ë—Ç.",
    "–ù—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å?": "–ù–µ—Ç, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑—É—á–∏—Ç—å –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ –æ –≤–ª–æ–∂–µ–Ω–∏—è—Ö.",
    "–ï—Å—Ç—å –ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∏—Å—Å–∏–∏?": "–ù–µ—Ç, –≤—Å–µ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∏ –∑–∞—Ä–∞–Ω–µ–µ —É–∫–∞–∑–∞–Ω—ã. –í—ã –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ—Ç–µ, —Å–∫–æ–ª—å–∫–æ –∏ –∑–∞ —á—Ç–æ –ø–ª–∞—Ç–∏—Ç–µ.",
    "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç?": "–î–∞, —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ –≤–∞—à–µ–º—É –∂–µ–ª–∞–Ω–∏—é, –±–µ–∑ ¬´–∑–∞–º–æ—Ä–æ–∑–∫–∏¬ª –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ä–æ–∫–æ–≤.",
    "–ê –µ—Å–ª–∏ —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?": "–ù–µ —Å—Ç—Ä–∞—à–Ω–æ üôÇ –í—Å—ë –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ —Ç–∞–∫, —á—Ç–æ–±—ã –¥–∞–∂–µ –Ω–æ–≤–∏—á–æ–∫ –º–æ–≥ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è. –ï—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.",
    "–ß—Ç–æ, –µ—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?": "–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã. –î–∞–∂–µ –≤ —Å–ª—É—á–∞–µ —Å–±–æ—è –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.",
    "–ù—É–∂–Ω–æ –ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏?": "–ù–µ—Ç, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É–¥–µ–ª—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–∏–º —Å—á—ë—Ç–æ–º.",
    "–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏?": "–ú—ã –Ω–µ –æ–±–µ—â–∞–µ–º ¬´–∑–æ–ª–æ—Ç—ã—Ö –≥–æ—Ä¬ª, –Ω–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã."
}

# --- –ò–ò-–¢–µ—Å—Ç ---
test_questions = [
    {
        "q": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
        "options": [
            "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —Å–ø–æ—Å–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö.",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±—É–¥—É—â–µ–µ."
        ],
        "correct": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —Å–ø–æ—Å–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö."
    },
    {
        "q": "–ö–∞–∫ –ò–ò –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ –∞–Ω–∞–ª–∏–∑–µ —Ä—ã–Ω–∫–∞?",
        "options": [
            "–ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –æ—Ç—á—ë—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ, –≤—ã—è–≤–ª—è—è —Ç—Ä–µ–Ω–¥—ã.",
            "–ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ —Ä–µ—à–µ–Ω–∏—è."
        ],
        "correct": "–ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –æ—Ç—á—ë—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ, –≤—ã—è–≤–ª—è—è —Ç—Ä–µ–Ω–¥—ã."
    },
    {
        "q": "–ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞–µ—Ç –ò–ò –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏?",
        "options": [
            "–ò–ò –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º –∫–æ–Ω—Ç—Ä–æ–ª–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—è –ø—Ä–∏–±—ã–ª—å.",
            "–ò–ò –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é –∏ —Ç–æ—á–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é."
        ],
        "correct": "–ò–ò –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é –∏ —Ç–æ—á–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é."
    },
    {
        "q": "–ö–∞–∫—É—é –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á –ò–ò –≤—ã–ø–æ–ª–Ω—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤ —Å—Ñ–µ—Ä–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
        "options": [
            "–í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö.",
            "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –ø—Ä–∏–±—ã–ª–∏, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏."
        ],
        "correct": "–í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö."
    },
    {
        "q": "–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ò–ò –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?",
        "options": [
            " –ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –∏ –Ω–µ –≤–º–µ—à–∏–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å.",
            "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø—ã—Ç–∞."
        ],
        "correct": "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø—ã—Ç–∞."
    }
]

# --- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ ---
user_progress = {}  # –¥–ª—è –ò–ò-—Ç–µ—Å—Ç–∞
user_state = {}     # –¥–ª—è "–û–±—â–µ–π –∫–∞—Ä—Ç–∏–Ω—ã"
user_answers = {}   # –¥–ª—è —Ç–µ—Å—Ç–∞ —Å —Ç—Ä–µ–º—è –ø—É—Ç—è–º–∏

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu():
    keyboard = [
        [KeyboardButton("üìä –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞"), KeyboardButton("üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
        [KeyboardButton("üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"), KeyboardButton("üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã")],
        [KeyboardButton("‚ú® –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä—ã—á–∞–≥–∞–º")],
        [KeyboardButton("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùì")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- FAQ –º–µ–Ω—é ---
def faq_menu():
    keyboard = [[KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]] + [[KeyboardButton(q)] for q in faq_data.keys()]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- –ú–µ–Ω—é –ø–µ—Ä–µ–¥ –ò–ò-—Ç–µ—Å—Ç–æ–º ---
def start_test_menu():
    keyboard = [
        [KeyboardButton("üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")],
        [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –ò–ò-—Ç–µ—Å—Ç–∞ ---
async def send_test_question(message: types.Message, idx: int):
    q = test_questions[idx]
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(opt)] for opt in q["options"]] + [[KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]],
        resize_keyboard=True
    )
    await message.answer(q["q"], reply_markup=keyboard)

# --- Inline –∫–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é" ---
def inline_back_to_menu():
    keyboard = [[InlineKeyboardButton("–í –º–µ–Ω—é", callback_data="back_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    file_id = "BAACAgQAAxkDAAIEgGi5kTsunsNKCxSgT62lGkOro6iLAAI8KgACIJ7QUfgrP_Y9_DJKNgQ"
    await message.answer_video(video=file_id, reply_markup=inline_back_to_menu())

# --- Inline callback ---
@dp.callback_query()
async def callbacks(callback: types.CallbackQuery):
    if callback.data == "back_to_menu":
        await callback.message.answer("–°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä", reply_markup=main_menu())
        await callback.answer()

# --- –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ---
@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    text = message.text

    # --- –ö–Ω–æ–ø–∫–∞ "üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç" (—Ç—Ä–∏ –ø—É—Ç–∏) ---
    if text == "üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç":
        user_answers[user_id] = {}
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton("–ú–∞—à–∏–Ω–∞"), KeyboardButton("–î–æ–º"), KeyboardButton("–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥")],
                [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        )
        await message.answer("–ö–∞–∫–æ–≤–∞ —Ç–≤–æ—è —Ü–µ–ª—å?", reply_markup=keyboard)
        return

    # --- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç—Ä—ë—Ö—à–∞–≥–æ–≤–æ–º —Ç–µ—Å—Ç–µ ---
    if user_id in user_answers:
        answers = user_answers[user_id]

        # –®–∞–≥ 1: –≤—ã–±–æ—Ä —Ü–µ–ª–∏
        if "goal" not in answers:
            if text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
                del user_answers[user_id]
                await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
                return
            answers["goal"] = text
            if text == "–ú–∞—à–∏–Ω–∞":
                keyboard = ReplyKeyboardMarkup(
                    keyboard=[[KeyboardButton("100 000—Ä"), KeyboardButton("500 000—Ä"), KeyboardButton("1 000 000—Ä")],
                              [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]], resize_keyboard=True
                )
                await message.answer("–ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—à–∏–Ω—ã?", reply_markup=keyboard)
            elif text == "–î–æ–º":
                keyboard = ReplyKeyboardMarkup(
                    keyboard=[[KeyboardButton("3 000 000—Ä"), KeyboardButton("5 000 000—Ä"), KeyboardButton("15 000 000—Ä")],
                              [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]], resize_keyboard=True
                )
                await message.answer("–ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–º–∞?", reply_markup=keyboard)
            elif text == "–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥":
                keyboard = ReplyKeyboardMarkup(
                    keyboard=[[KeyboardButton("100 000—Ä"), KeyboardButton("500 000—Ä"), KeyboardButton("1 000 000—Ä")],
                              [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]], resize_keyboard=True
                )
                await message.answer("–°–∫–æ–ª—å–∫–æ –≤ –º–µ—Å—è—Ü —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å?", reply_markup=keyboard)
            return

        # –®–∞–≥ 2: —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ü–µ–ª–∏ / –∂–µ–ª–∞–µ–º—ã–π –¥–æ—Ö–æ–¥
        if "goal_value" not in answers:
            if text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
                del user_answers[user_id]
                await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
                return
            answers["goal_value"] = text
            keyboard = ReplyKeyboardMarkup(
                keyboard=[[KeyboardButton("10 000—Ä"), KeyboardButton("20 000—Ä"), KeyboardButton("30 000—Ä")],
                          [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]], resize_keyboard=True
            )
            await message.answer("–°–∫–æ–ª—å–∫–æ –≤—ã –≥–æ—Ç–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –º–µ—Å—è—Ü?", reply_markup=keyboard)
            return

        # –®–∞–≥ 3: —Ä–∞—Å—á–µ—Ç
        if "monthly_invest" not in answers:
            if text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
                del user_answers[user_id]
                await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
                return
            answers["monthly_invest"] = text

            goal_value = int(answers["goal_value"].replace("—Ä", "").replace(" ", ""))
            monthly = int(answers["monthly_invest"].replace("—Ä", "").replace(" ", ""))
            annual_return = 1.35
            total = 0
            months = 0
            while total < goal_value:
                total = (total + monthly) * (annual_return ** (1/12))
                months += 1
            years = months // 12
            remaining_months = months % 12

            if answers["goal"] == "–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥":
                result_text = f"–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –ò–ò-–±–æ—Ç–∞, –ø—Ä–∏ –≤–∞—à–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö {monthly}‚ÇΩ/–º–µ—Å, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ {goal_value}‚ÇΩ –≤ –º–µ—Å—è—Ü –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ {years} –ª–µ—Ç –∏ {remaining_months} –º–µ—Å—è—Ü–µ–≤."
            elif answers["goal"] == "–ú–∞—à–∏–Ω–∞":
                result_text = f"–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –ò–ò-–±–æ—Ç–∞, –ø—Ä–∏ –≤–∞—à–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö {monthly}‚ÇΩ/–º–µ—Å, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É —Å—Ç–æ–∏–º–æ—Å—Ç—å—é {goal_value}‚ÇΩ –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ {years} –ª–µ—Ç –∏ {remaining_months} –º–µ—Å—è—Ü–µ–≤."
            else:  # –î–æ–º
                result_text = f"–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –ò–ò-–±–æ—Ç–∞, –ø—Ä–∏ –≤–∞—à–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö {monthly}‚ÇΩ/–º–µ—Å, –≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –¥–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å—é {goal_value}‚ÇΩ –ø—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑ {years} –ª–µ—Ç –∏ {remaining_months} –º–µ—Å—è—Ü–µ–≤."

            await message.answer(result_text, reply_markup=main_menu())
            del user_answers[user_id]
            return

    # --- –ö–Ω–æ–ø–∫–∞ "‚ú® –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä—ã—á–∞–≥–∞–º" (–ò–ò-—Ç–µ—Å—Ç) ---
    if text == "‚ú® –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä—ã—á–∞–≥–∞–º":
        await message.answer("üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å.\n–ü–æ–º–Ω–∏—Ç–µ, –ò–ò ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∞ –Ω–µ –≤–æ–ª—à–µ–±–Ω–∞—è –ø–∞–ª–æ—á–∫–∞.", reply_markup=start_test_menu())
        return

    if text == "üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç" and user_id not in user_answers:
        user_progress[user_id] = 0
        await send_test_question(message, 0)
        return

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ò–ò-—Ç–µ—Å—Ç–∞ ---
    if user_id in user_progress:
        idx = user_progress[user_id]
        q = test_questions[idx]
        if text == q["correct"]:
            await message.answer("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            idx += 1
            if idx < len(test_questions):
                user_progress[user_id] = idx
                await send_test_question(message, idx)
            else:
                await message.answer("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!", reply_markup=main_menu())
                del user_progress[user_id]
        elif text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
            await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
            del user_progress[user_id]
        else:
            await message.answer("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", reply_markup=ReplyKeyboardMarkup([[KeyboardButton(opt) for opt in q["options"]], [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]], resize_keyboard=True))
        return

    # --- FAQ ---
    if text in faq_data:
        await message.answer(faq_data[text])
        return

    # --- –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ ---
    if text == "üìä –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞":
        user_state[user_id] = "step1"
        await message.answer("–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω—É, –Ω–∞—á–Ω–µ–º —Å —Ç–∞–±–ª–∏—Ü...", reply_markup=ReplyKeyboardMarkup([[KeyboardButton("–î–∞–ª–µ–µ‚û°"), KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]], resize_keyboard=True))
        return
    elif user_state.get(user_id) == "step1" and text == "–î–∞–ª–µ–µ‚û°":
        user_state[user_id] = "step2"
        await message.answer_photo(photo="AgACAgQAAxkBAAIM0Gi9LaXmP4pct66F2FEKUu0WAAF84gACqMoxG5bI6VHDQO5xqprkdwEAAwIAA3kAAzYE",
                                 reply_markup=ReplyKeyboardMarkup([[KeyboardButton("–î–∞–ª–µ–µ‚û°"), KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]], resize_keyboard=True))
        return
    elif user_state.get(user_id) == "step2" and text == "–î–∞–ª–µ–µ‚û°":
        del user_state[user_id]
        await message.answer("–í–æ—Ç –ø–æ—á–µ–º—É —Ç–∞–∫ –≤–∞–∂–Ω–æ –≤–∏–¥–µ—Ç—å –≤—Å—é –∫–∞—Ä—Ç–∏–Ω—É —Ü–µ–ª–∏–∫–æ–º.", reply_markup=main_menu())
        return

    # --- –î–æ–∫—É–º–µ–Ω—Ç—ã ---
    if text == "üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã":
        await message.answer_document("BQACAgQAAxkBAAIFOGi6vNHLzH9IyJt0q7_V4y73FcdrAAKXGwACeDjZUSdnK1dqaQoPNgQ")
        return
    if text == "üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å":
        await message.answer("https://traiex.gitbook.io/user-guides/ru/kak-zaregistrirovatsya-–Ω–∞-traiex")
        return

    # --- FAQ –º–µ–Ω—é ---
    if text == "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã‚ùì":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:", reply_markup=faq_menu())
        return

    # --- –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ---
    if text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        user_state.pop(user_id, None)
        user_answers.pop(user_id, None)
        user_progress.pop(user_id, None)
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
        return

    # --- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ---
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
