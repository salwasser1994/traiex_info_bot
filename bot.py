import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
import random

API_TOKEN = "YOUR_BOT_TOKEN_HERE"

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN, parse_mode="HTML")
dp = Dispatcher(storage=MemoryStorage())

# –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é
button_info = KeyboardButton("üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—Ä–∏–ø—Ç–µ")
button_tips = KeyboardButton("üí° –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã")
button_motivation = KeyboardButton("üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è")
button_faq = KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [button_info, button_tips],
        [button_motivation, button_faq]
    ],
    resize_keyboard=True
)

# –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
crypto_info = {
    "Bitcoin": "Bitcoin ‚Äî –ø–µ—Ä–≤–∞—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è –≤ 2009 –≥–æ–¥—É. BTC –æ–≥—Ä–∞–Ω–∏—á–µ–Ω 21 –º–ª–Ω –º–æ–Ω–µ—Ç.",
    "Ethereum": "Ethereum ‚Äî –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ ETH.",
    "Altcoins": "Altcoins ‚Äî –≤—Å–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –∫—Ä–æ–º–µ Bitcoin. –ù–∞–ø—Ä–∏–º–µ—Ä, Litecoin, Cardano, Solana."
}

investment_tips = [
    "–ù–µ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–π –±–æ–ª—å—à–µ, —á–µ–º –≥–æ—Ç–æ–≤ –ø–æ—Ç–µ—Ä—è—Ç—å.",
    "–î–∏–≤–µ—Ä—Å–∏—Ñ–∏—Ü–∏—Ä—É–π –ø–æ—Ä—Ç—Ñ–µ–ª—å, –Ω–µ –¥–µ—Ä–∂–∏ –≤—Å—ë –≤ –æ–¥–Ω–æ–π –º–æ–Ω–µ—Ç–µ.",
    "–ò–∑—É—á–∏ –ø—Ä–æ–µ–∫—Ç –ø–µ—Ä–µ–¥ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º: –∫–æ–º–∞–Ω–¥–∞, —Ü–µ–ª—å, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è.",
    "–°–ª–µ–¥–∏ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –∏ —Ç—Ä–µ–Ω–¥–∞–º–∏ —Ä—ã–Ω–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç."
]

motivation_quotes = [
    "–ö—Ç–æ —Ä–∏—Å–∫—É–µ—Ç ‚Äî —Ç–æ—Ç –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç. –ù–∞—á–Ω–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –∫—Ä–∏–ø—Ç—É —Å–µ–≥–æ–¥–Ω—è!",
    "–õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –±—ã–ª–æ –≤—á–µ—Ä–∞, –≤—Ç–æ—Ä–æ–µ –ª—É—á—à–µ–µ ‚Äî —Å–µ–π—á–∞—Å.",
    "–ü–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –∏ –∑–Ω–∞–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç –±–æ–≥–∞—Ç—Å—Ç–≤–æ.",
    "–ù–µ –±–æ–π—Å—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —à–∞–≥–æ–≤ ‚Äî –æ–Ω–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–æ–ª—å—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º."
]

faq_answers = {
    "–ß—Ç–æ —Ç–∞–∫–æ–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞?": "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ ‚Äî —ç—Ç–æ —Ü–∏—Ñ—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –±–ª–æ–∫—á–µ–π–Ω.",
    "–ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?": "–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –Ω–∞–¥—ë–∂–Ω—É—é –±–∏—Ä–∂—É, —Å–æ–∑–¥–∞–π –∫–æ—à–µ–ª—ë–∫ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä—É–π –Ω–µ–±–æ–ª—å—à–∏–µ —Å—É–º–º—ã.",
    "–ö–∞–∫–∞—è –∫—Ä–∏–ø—Ç–∞ —Å–∞–º–∞—è –Ω–∞–¥—ë–∂–Ω–∞—è?": "Bitcoin –∏ Ethereum —Å—á–∏—Ç–∞—é—Ç—Å—è –Ω–∞–∏–±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–º–∏ –∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º–∏."
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
@dp.message(Command(commands=["start"]))
async def cmd_start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –∫—Ä–∏–ø—Ç–æ-–±–æ—Ç üöÄ\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö.\n"
        "–í—ã–±–∏—Ä–∞–π –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:",
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
@dp.message()
async def handle_message(message: types.Message):
    text = message.text

    if text == "üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—Ä–∏–ø—Ç–µ":
        info_text = "\n\n".join([f"<b>{k}</b>: {v}" for k, v in crypto_info.items()])
        await message.answer(info_text)

    elif text == "üí° –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–≤–µ—Ç—ã":
        tip = random.choice(investment_tips)
        await message.answer(f"üí° –°–æ–≤–µ—Ç:\n{tip}")

    elif text == "üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è":
        quote = random.choice(motivation_quotes)
        await message.answer(f"üî• –ú–æ—Ç–∏–≤–∞—Ü–∏—è:\n{quote}")

    elif text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await message.answer("–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –∫—Ä–∏–ø—Ç—É, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!")

    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º FAQ
        answer = faq_answers.get(text)
        if answer:
            await message.answer(answer)
        else:
            await message.answer(
                "–ò–∑–≤–∏–Ω–∏, —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å üòÖ\n"
                "–ü–æ–ø—Ä–æ–±—É–π –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é.",
                reply_markup=main_menu
            )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        await dp.start_polling(bot)
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())
