import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# ======================
# –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–π FAQ —Å AI –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏
# ======================
faq_data = {
    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π?":
        ("‚úÖ –î–∞! –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã.\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî —Ç–≤–æ–π –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ —É—Å–ø–µ—Ö—É! üöÄ"),
    "–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É?":
        ("üìß –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ e-mail –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Ç–µ—Ä—è–π –∫–æ–Ω—Ç—Ä–æ–ª—å, —ç—Ç–æ —Ç–≤–æ–π —â–∏—Ç! üõ°Ô∏è"),
    "–ù—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å?":
        ("üíé –ù–∞—á–Ω–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –ü–µ—Ä–≤—ã–π —à–∞–≥ –∫ –±–æ–≥–∞—Ç—Å—Ç–≤—É –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–ª–æ–∂–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ —Ç–≤–æ—ë –≤–Ω–∏–º–∞–Ω–∏–µ."),
    "–ï—Å—Ç—å –ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∏—Å—Å–∏–∏?":
        ("üîπ –ù–µ—Ç! –í—Å—ë –ø—Ä–æ–∑—Ä–∞—á–Ω–æ.\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å ‚Äî –∫–ª—é—á –∫ —è—Å–Ω—ã–º —Ä–µ—à–µ–Ω–∏—è–º."),
    "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç?":
        ("üí∞ –ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Å–≤–æ–±–æ–¥–∞!\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –£–ø—Ä–∞–≤–ª—è–π –∫–∞–ø–∏—Ç–∞–ª–æ–º, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å ‚Äî —ç—Ç–æ —Å–∏–ª–∞!"),
    "–ê –µ—Å–ª–∏ —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?":
        ("ü§ñ –ù–µ —Å—Ç—Ä–∞—à–Ω–æ! –ú—ã –æ–±—É—á–∏–º —Ç–µ–±—è —à–∞–≥ –∑–∞ —à–∞–≥–æ–º.\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –ù–æ–≤–∏—á–æ–∫ —Å–µ–≥–æ–¥–Ω—è ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –∑–∞–≤—Ç—Ä–∞!"),
    "–ß—Ç–æ, –µ—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?":
        ("üõ°Ô∏è –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º!\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –†–µ–∑–µ—Ä–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –∑–∞—â–∏—â–∞—é—Ç —Ç–≤–æ–π –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É."),
    "–ù—É–∂–Ω–æ –ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏?":
        ("‚è±Ô∏è –í—Å–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å.\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –ö–∞–ø–∏—Ç–∞–ª —Ä–∞—Å—Ç–µ—Ç, –∫–æ–≥–¥–∞ —Ç—ã –¥–µ–π—Å—Ç–≤—É–µ—à—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ!"),
    "–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏?":
        ("‚ö° –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —á–µ—Å—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å.\n\n"
         "<i>AI —Å–æ–≤–µ—Ç:</i> –ß–µ—Å—Ç–Ω–æ—Å—Ç—å = –¥–æ–≤–µ—Ä–∏–µ + —Ä–æ—Å—Ç.")
}

# ======================
# –¢–µ—Å—Ç —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
# ======================
test_questions = [
    {
        "q": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
        "options": [
            "üíª –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–≥—Ä–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
            "‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±—É–¥—É—â–µ–µ"
        ],
        "correct": "üíª –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–≥—Ä–æ–º–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
    },
    {
        "q": "–ö–∞–∫ –ò–ò –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ –∞–Ω–∞–ª–∏–∑–µ —Ä—ã–Ω–∫–∞?",
        "options": [
            "üìà –ë—ã—Å—Ç—Ä–æ –≤—ã—è–≤–ª—è—Ç—å —Ç—Ä–µ–Ω–¥—ã",
            "‚ùå –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞"
        ],
        "correct": "üìà –ë—ã—Å—Ç—Ä–æ –≤—ã—è–≤–ª—è—Ç—å —Ç—Ä–µ–Ω–¥—ã"
    },
    {
        "q": "–ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞–µ—Ç –ò–ò –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏?",
        "options": [
            "‚ùå –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–±–∏—Ä–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å —á–µ–ª–æ–≤–µ–∫–∞",
            "‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏ —É—Å–∫–æ—Ä—è–µ—Ç —Ç–æ—Ä–≥–æ–≤–ª—é"
        ],
        "correct": "‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –∏ —É—Å–∫–æ—Ä—è–µ—Ç —Ç–æ—Ä–≥–æ–≤–ª—é"
    },
    {
        "q": "–ö–∞–∫—É—é –∑–∞–¥–∞—á—É –ò–ò –≤—ã–ø–æ–ª–Ω—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ?",
        "options": [
            "‚úÖ –í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º",
            "‚ùå –ì–∞—Ä–∞–Ω—Ç–∏—è –ø—Ä–∏–±—ã–ª–∏"
        ],
        "correct": "‚úÖ –í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º"
    },
    {
        "q": "–ö–ª—é—á–µ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ò–ò?",
        "options": [
            "‚ùå –ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º",
            "üí° –ö–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—ã—Ç–∞"
        ],
        "correct": "üí° –ö–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø—ã—Ç–∞"
    }
]

user_progress = {}
user_state = {}

# ======================
# –ú–µ–Ω—é –±–æ—Ç–∞ —Å —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º —Å—Ç–∏–ª–µ–º
# ======================
def main_menu():
    keyboard = [
        [KeyboardButton("ü§ñ –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞"), KeyboardButton("üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
        [KeyboardButton("üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"), KeyboardButton("üìÑ –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã")],
        [KeyboardButton("üîÆ –ú–æ—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–∏–ª–∞")],
        [KeyboardButton("‚ùì FAQ")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def faq_menu():
    keyboard = [[KeyboardButton(text=q)] for q in faq_data.keys()]
    keyboard.append([KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def start_test_menu():
    keyboard = [[KeyboardButton("üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")], [KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# ======================
# –ü—Ä–æ–≥—Ä–µ—Å—Å —Ç–µ—Å—Ç–∞ —Å —ç–º–æ–¥–∑–∏
# ======================
def progress_bar(idx, total):
    bar = "‚ö™" * total
    bar = bar[:idx] + "üü¢" + bar[idx+1:]
    return bar

async def send_test_question(message: types.Message, idx: int):
    q = test_questions[idx]
    total = len(test_questions)
    progress = progress_bar(idx, total)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=opt)] for opt in q["options"]] + [[KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]],
        resize_keyboard=True
    )
    await message.answer(f"<b>{progress}</b>\n\n{q['q']}", reply_markup=keyboard)

def inline_back_to_menu():
    return InlineKeyboardMarkup([[InlineKeyboardButton("–í –º–µ–Ω—é", callback_data="back_to_menu")]])

# ======================
# /start
# ======================
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer_video(
        video="BAACAgQAAxkDAAIEgGi5kTsunsNKCxSgT62lGkOro6iLAAI8KgACIJ7QUfgrP_Y9_DJKNgQ",
        caption="ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±—É–¥—É—â–µ–µ —Ç–≤–æ–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=inline_back_to_menu()
    )

# ======================
# Inline –∫–Ω–æ–ø–∫–∞
# ======================
@dp.callback_query()
async def callbacks(callback: types.CallbackQuery):
    if callback.data == "back_to_menu":
        await callback.message.answer("‚ö° –°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä ‚ö°", reply_markup=main_menu())
        await callback.answer()

# ======================
# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
# ======================
@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id

    # –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞
    if message.text == "ü§ñ –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞":
        user_state[user_id] = "step1"
        text1 = (
            "üöÄ <b>–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–µ–Ω—Å–æ—Ä—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —É—Å–ø–µ—Ö–∞...</b>\n\n"
            "–ö–∞–∂–¥–∞—è —Ü–∏—Ñ—Ä–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ ‚Äî —ç—Ç–æ —Ç–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –í–∏–¥–∏—à—å –∫–∞—Ä—Ç–∏–Ω—É ‚Äî —É–ø—Ä–∞–≤–ª—è–µ—à—å –±—É–¥—É—â–∏–º!"
        )
        keyboard = ReplyKeyboardMarkup([[KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton("–î–∞–ª–µ–µ‚û°")]], resize_keyboard=True)
        await message.answer(text1, reply_markup=keyboard)

    elif user_state.get(user_id) == "step1" and message.text == "–î–∞–ª–µ–µ‚û°":
        user_state[user_id] = "step2"
        keyboard = ReplyKeyboardMarkup([[KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton("–î–∞–ª–µ–µ‚û°")]], resize_keyboard=True)
        await message.answer_photo(
            photo="AgACAgQAAxkBAAIM0Gi9LaXmP4pct66F2FEKUu0WAAF84gACqMoxG5bI6VHDQO5xqprkdwEAAwIAA3kAAzYE",
            caption="üñ•Ô∏è –¢–∞–±–ª–∏—Ü–∞ —Ç–≤–æ–∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π ‚Äî –≤–∏–¥–∏—à—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª?",
            reply_markup=keyboard
        )

    elif user_state.get(user_id) == "step2" and message.text == "–î–∞–ª–µ–µ‚û°":
        del user_state[user_id]
        text2 = (
            "üí° –ú–∞–ª—ã–µ —à–∞–≥–∏ —Å–æ–∑–¥–∞—é—Ç –±–æ–ª—å—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!\n\n"
            "‚Äî –ù–µ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å ‚Äî —Ç–µ—Ä—è–µ—à—å —à–∞–Ω—Å\n"
            "‚Äî –ß–∞—Å—Ç–∏—á–Ω–æ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ—Å—Ç—å\n"
            "‚Äî –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—ë (–ò–ò + —Å—Ç—Ä–∞—Ç–µ–≥–∏—è) ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç! ‚ö°\n\n"
            "<b>–¢–≤–æ—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–∏–ª–∞ —Ä–∞—Å—Ç—ë—Ç —Å –∫–∞–∂–¥—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º!</b>"
        )
        await message.answer(text2, reply_markup=main_menu())

    # FAQ
    elif message.text == "‚ùì FAQ":
        await message.answer("–í—ã–±–µ—Ä–∏ –≤–æ–ø—Ä–æ—Å –∏ –ø—Ä–æ–∫–∞—á–∞–π —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è:", reply_markup=faq_menu())
    elif message.text in faq_data:
        await message.answer(faq_data[message.text])

    # –¢–µ—Å—Ç
    elif message.text == "üîÆ –ú–æ—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–∏–ª–∞":
        await message.answer("üìò –í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏ –ø–æ—á—É–≤—Å—Ç–≤—É–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å! ü§ñ", reply_markup=start_test_menu())
    elif message.text == "üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç":
        user_progress[user_id] = 0
        await send_test_question(message, 0)

    elif user_id in user_progress:
        idx = user_progress[user_id]
        q = test_questions[idx]
        if message.text == q["correct"]:
            await message.answer("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢—ã —Ä–∞—Å—Ç—ë—à—å –∫–∞–∫ –∏–Ω–≤–µ—Å—Ç–æ—Ä!")
            idx += 1
            if idx < len(test_questions):
                user_progress[user_id] = idx
                await send_test_question(message, idx)
            else:
                await message.answer("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –¢–≤–æ—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–∏–ª–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞ ‚ö°", reply_markup=main_menu())
                del user_progress[user_id]
        elif message.text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
            await message.answer("–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
            del user_progress[user_id]
        else:
            await message.answer("‚ùå –ù–µ—É–¥–∞—á–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑! –¢–≤–æ–π —É—Å–ø–µ—Ö –±–ª–∏–∑–∫–æ ‚ö°")

    elif message.text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        user_state.pop(user_id, None)
        await message.answer("–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())

    # –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
    elif message.text == "üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å":
        await message.answer("üöÄ [–ù–∞—á–∞—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å!](https://traiex.gitbook.io/user-guides/ru/kak-zaregistrirovatsya-na-traiex)")

    elif message.text == "üìÑ –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã":
        await message.answer_document("BQACAgQAAxkBAAIFOGi6vNHLzH9IyJt0q7_V4y73FcdrAAKXGwACeDjZUSdnK1dqaQoPNgQ")

    else:
        await message.answer("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())

# ======================
# –ó–∞–ø—É—Å–∫
# ======================
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
