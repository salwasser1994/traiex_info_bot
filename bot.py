import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import (
    ReplyKeyboardMarkup, KeyboardButton,
    InlineKeyboardMarkup, InlineKeyboardButton
)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# --- –î–∞–Ω–Ω—ã–µ FAQ ---
faq_data = {
    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π?": 
        "üõ°Ô∏è –î–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—â–∏—â—ë–Ω –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º–∏ –±—É–¥—É—â–µ–≥–æ. "
        "–í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∫–≤–∞–Ω—Ç–æ–≤–æ–π —Å–µ—Ç–∏.",
    
    "–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É?":
        "üîë –î–∞–∂–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ –¥–æ—Å—Ç—É–ø–∞ –≤–∞—à–∞ —Ü–∏—Ñ—Ä–æ–≤–∞—è –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ e-mail –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ.",
    
    "–ù—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å?":
        "üí∏ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞. –ò–∑—É—á–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ç–∏, –ø—Ä–µ–∂–¥–µ —á–µ–º –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å.",
    
    "–ï—Å—Ç—å –ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∏—Å—Å–∏–∏?":
        "üõ∞Ô∏è –ù–µ—Ç. –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é—Ç—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.",
    
    "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç?":
        "üöÄ –°—Ä–µ–¥—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ, –±–µ–∑ –∑–∞–º–æ—Ä–æ–∑–∫–∏ –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.",
    
    "–ê –µ—Å–ª–∏ —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?":
        "ü§ñ –ù–µ —Å—Ç—Ä–∞—à–Ω–æ! –ù–∞—à –ò–ò –ø—Ä–æ–≤–µ–¥—ë—Ç –≤–∞—Å –ø–æ –º–∞—Ä—à—Ä—É—Ç—É –∏ –ø–æ–∫–∞–∂–µ—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —à–∞–≥–∏.",
    
    "–ß—Ç–æ, –µ—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?":
        "‚ö° –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä—ã –∏ –∑–∞—â–∏—Ç—É –æ—Ç —Å–±–æ–µ–≤. –í–∞—à–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è.",
    
    "–ù—É–∂–Ω–æ –ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏?":
        "‚è±Ô∏è –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –º–∞—Ç—Ä–∏—Ü—ã.",
    
    "–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏?":
        "üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã –∏ –∑–∞—â–∏—Ç—É –∞–∫—Ç–∏–≤–æ–≤. –ú–∞–≥–∏—á–µ—Å–∫–∏—Ö ¬´–∑–æ–ª–æ—Ç—ã—Ö –≥–æ—Ä¬ª –Ω–µ—Ç, –Ω–æ —Å–∏—Å—Ç–µ–º–∞ —á–µ—Å—Ç–Ω–∞."
}

# --- –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã ---
test_questions = [
    {
        "q": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
        "options": [
            "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —Å–ø–æ—Å–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö.",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±—É–¥—É—â–µ–µ."
        ],
        "correct": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —Å–ø–æ—Å–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö."
    },
    {
        "q": "–ö–∞–∫ –ò–ò –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ –∞–Ω–∞–ª–∏–∑–µ —Ä—ã–Ω–∫–∞?",
        "options": [
            "–ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –æ—Ç—á—ë—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ, –≤—ã—è–≤–ª—è—è —Ç—Ä–µ–Ω–¥—ã.",
            "–ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ —Ä–µ—à–µ–Ω–∏—è."
        ],
        "correct": "–ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –æ—Ç—á—ë—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ, –≤—ã—è–≤–ª—è—è —Ç—Ä–µ–Ω–¥—ã."
    },
    {
        "q": "–ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞–µ—Ç –ò–ò –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏?",
        "options": [
            "–ò–ò –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º –∫–æ–Ω—Ç—Ä–æ–ª–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—è –ø—Ä–∏–±—ã–ª—å.",
            "–ò–ò –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é –∏ —Ç–æ—á–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é."
        ],
        "correct": "–ò–ò –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é –∏ —Ç–æ—á–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é."
    },
    {
        "q": "–ö–∞–∫—É—é –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á –ò–ò –≤—ã–ø–æ–ª–Ω—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤ —Å—Ñ–µ—Ä–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
        "options": [
            "–í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö.",
            "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –ø—Ä–∏–±—ã–ª–∏, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏."
        ],
        "correct": "–í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö."
    },
    {
        "q": "–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ò–ò –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?",
        "options": [
            "–ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –∏ –Ω–µ –≤–º–µ—à–∏–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å.",
            "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø—ã—Ç–∞."
        ],
        "correct": "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø—ã—Ç–∞."
    }
]

# --- –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
user_progress = {}
user_state = {}

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ ---
def main_menu():
    keyboard = [
        [KeyboardButton(text="üìä –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–∞—Ç—Ä–∏—Ü–∞ ‚ö°"), KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç ü§ñ")],
        [KeyboardButton(text="üí∞ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ üõ∏"), KeyboardButton(text="üìÑ –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã üì°")],
        [KeyboardButton(text="‚ú® –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—ã—á–∞–≥–∏ –±—É–¥—É—â–µ–≥–æ üîÆ")],
        [KeyboardButton(text="‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã AI")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- –ú–µ–Ω—é FAQ ---
def faq_menu():
    keyboard = [[KeyboardButton(text=q)] for q in faq_data.keys()]
    keyboard.append([KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- –ú–µ–Ω—é –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º ---
def start_test_menu():
    keyboard = [
        [KeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")],
        [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- Inline –∫–Ω–æ–ø–∫–∞ ¬´–í –º–µ–Ω—é¬ª ---
def inline_back_to_menu():
    keyboard = [[InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="back_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º ---
async def send_test_question(message: types.Message, idx: int):
    q = test_questions[idx]
    progress = int((idx + 1) / len(test_questions) * 10)
    bar = "‚ñì" * progress + "‚ñë" * (10 - progress)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=opt)] for opt in q["options"]] + [[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]],
        resize_keyboard=True
    )
    await message.answer(f"ü§ñ –í–æ–ø—Ä–æ—Å {idx + 1}/{len(test_questions)} {bar}\n\n{q['q']}", reply_markup=keyboard)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    file_id = "BAACAgQAAxkDAAIEgGi5kTsunsNKCxSgT62lGkOro6iLAAI8KgACIJ7QUfgrP_Y9_DJKNgQ"
    await message.answer_video(video=file_id, reply_markup=inline_back_to_menu())

# --- Inline callback ---
@dp.callback_query()
async def callbacks(callback: types.CallbackQuery):
    if callback.data == "back_to_menu":
        await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())
        await callback.answer()

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ---
@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id

    # --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
    if message.text == "üìä –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–∞—Ç—Ä–∏—Ü–∞ ‚ö°":
        user_state[user_id] = "step1"
        text1 = (
            "ü§ñ –ò–ò –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ê–Ω–∞–ª–∏–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –º–∞—Ç—Ä–∏—Ü—ã:\n\n"
            "–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –≤–∏–¥–µ–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ, —Ç–∞–±–ª–∏—Ü—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã.\n"
            "üîπ –¢–∞–±–ª–∏—Ü—ã, –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—é—â–∏–µ —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–µ–ª:"
        )
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton(text="–î–∞–ª–µ–µ‚û°")]],
            resize_keyboard=True
        )
        await message.answer(text1, reply_markup=keyboard)

    elif user_state.get(user_id) == "step1" and message.text == "–î–∞–ª–µ–µ‚û°":
        user_state[user_id] = "step2"
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton(text="–î–∞–ª–µ–µ‚û°")]],
            resize_keyboard=True
        )
        await message.answer_photo(
            photo="AgACAgQAAxkBAAIM0Gi9LaXmP4pct66F2FEKUu0WAAF84gACqMoxG5bI6VHDQO5xqprkdwEAAwIAA3kAAzYE",
            reply_markup=keyboard
        )

    elif user_state.get(user_id) == "step2" and message.text == "–î–∞–ª–µ–µ‚û°":
        del user_state[user_id]
        text2 = (
            "üíæ –ü—Ä–∏–º–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–æ–≥—É—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–∑-–∑–∞ —Ä—ã–Ω–æ—á–Ω–æ–π –¥–∏–Ω–∞–º–∏–∫–∏.\n\n"
            "‚Äî –ë–µ–∑ –¥–µ–π—Å—Ç–≤–∏–π: –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
            "‚Äî –ß–∞—Å—Ç–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: –¥—Ä—É–≥–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
            "‚Äî –ü–æ–ª–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (–ò–ò + —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç): –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n\n"
            "–í–∏–¥–µ—Ç—å –≤—Å—é –∫–∞—Ä—Ç–∏–Ω—É —Ü–µ–ª–∏–∫–æ–º –∫—Ä–∞–π–Ω–µ –≤–∞–∂–Ω–æ."
        )
        await message.answer(text2, reply_markup=main_menu())

    # --- –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã ---
    elif message.text == "üìÑ –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã üì°":
        file_id = "BQACAgQAAxkBAAIFOGi6vNHLzH9IyJt0q7_V4y73FcdrAAKXGwACeDjZUSdnK1dqaQoPNgQ"
        await message.answer_document(file_id)

    # --- –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ ---
    elif message.text == "üí∞ –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–π —Å–µ—Ç–∏ üõ∏":
        await message.answer("https://traiex.gitbook.io/user-guides/ru/kak-zaregistrirovatsya-na-traiex")

    # --- FAQ ---
    elif message.text == "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã AI":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ò–ò:", reply_markup=faq_menu())
    elif message.text in faq_data:
        await message.answer(faq_data[message.text])

    # --- –¢–µ—Å—Ç—ã ---
    elif message.text == "‚ú® –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—ã—á–∞–≥–∏ –±—É–¥—É—â–µ–≥–æ üîÆ":
        await message.answer("üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –æ—Ç –ò–ò:\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å.", reply_markup=start_test_menu())
    elif message.text == "üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç":
        user_progress[user_id] = 0
        await send_test_question(message, 0)
    elif user_id in user_progress:
        idx = user_progress[user_id]
        q = test_questions[idx]
        if message.text == q["correct"]:
            await message.answer("‚úÖ –ò–ò –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç: –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä!")
            idx += 1
            if idx < len(test_questions):
                user_progress[user_id] = idx
                await send_test_question(message, idx)
            else:
                await message.answer("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –¶–∏—Ñ—Ä–æ–≤–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.", reply_markup=main_menu())
                del user_progress[user_id]
        elif message.text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
            await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
            del user_progress[user_id]
        else:
            await message.answer("‚ùå –ò–ò —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç: –Ω–µ–≤–µ—Ä–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")

    # --- –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é ---
    elif message.text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        user_state.pop(user_id, None)
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
