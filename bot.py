import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# ======================
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
# ======================
TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"

# ======================
# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
# ======================
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# ======================
# FAQ –¥–∞–Ω–Ω—ã–µ
# ======================
faq_data = {
    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π?":
        "‚úÖ –î–∞, –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –∑–∞—â–∏—â—ë–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–¥—ë–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã.",
    "–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É?":
        "üìß –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ e-mail –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚Äî –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–æ–ø–∞–¥—ë—Ç.",
    "–ù—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å?":
        "üíé –ù–µ—Ç, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è. –°–Ω–∞—á–∞–ª–∞ –∏–∑—É—á–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø–æ—Ç–æ–º —Ä–µ—à–∞–π –æ –≤–ª–æ–∂–µ–Ω–∏—è—Ö.",
    "–ï—Å—Ç—å –ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∏—Å—Å–∏–∏?":
        "üîπ –ù–µ—Ç, –≤—Å–µ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∏ –∑–∞—Ä–∞–Ω–µ–µ —É–∫–∞–∑–∞–Ω—ã.",
    "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç?":
        "üí∞ –î–∞, —Å—Ä–µ–¥—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ–∑ ¬´–∑–∞–º–æ—Ä–æ–∑–∫–∏¬ª –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ä–æ–∫–æ–≤.",
    "–ê –µ—Å–ª–∏ —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?":
        "ü§ñ –ù–µ —Å—Ç—Ä–∞—à–Ω–æ üôÇ –í—Å—ë –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤: –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏, –ø–æ–¥–¥–µ—Ä–∂–∫–∞.",
    "–ß—Ç–æ, –µ—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?":
        "üõ°Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞. –î–∞–∂–µ –ø—Ä–∏ —Å–±–æ–µ –¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.",
    "–ù—É–∂–Ω–æ –ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏?":
        "‚è±Ô∏è –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
    "–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏?":
        "‚ö° –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω—É—é —Ä–∞–±–æ—Ç—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã."
}

# ======================
# –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
# ======================
test_questions = [
    {
        "q": "–ß—Ç–æ —Ç–∞–∫–æ–µ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
        "options": [
            "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —Å–ø–æ—Å–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö.",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±—É–¥—É—â–µ–µ."
        ],
        "correct": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, —Å–ø–æ—Å–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –¥–∞–Ω–Ω—ã—Ö."
    },
    {
        "q": "–ö–∞–∫ –ò–ò –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤ –∞–Ω–∞–ª–∏–∑–µ —Ä—ã–Ω–∫–∞?",
        "options": [
            "–ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –æ—Ç—á—ë—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ, –≤—ã—è–≤–ª—è—è —Ç—Ä–µ–Ω–¥—ã.",
            "–ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤—Å–µ —Ä–µ—à–µ–Ω–∏—è."
        ],
        "correct": "–ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏, –æ—Ç—á—ë—Ç—ã –∏ –¥–∞–Ω–Ω—ã–µ, –≤—ã—è–≤–ª—è—è —Ç—Ä–µ–Ω–¥—ã."
    },
    {
        "q": "–ö–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞–µ—Ç –ò–ò –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏?",
        "options": [
            "–ò–ò –ø–æ–ª–Ω–æ—Å—Ç—å—é —É—Å—Ç—Ä–∞–Ω—è–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º –∫–æ–Ω—Ç—Ä–æ–ª–µ, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—è –ø—Ä–∏–±—ã–ª—å.",
            "–ò–ò –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é –∏ —Ç–æ—á–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é."
        ],
        "correct": "–ò–ò –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é –∏ —Ç–æ—á–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é."
    },
    {
        "q": "–ö–∞–∫—É—é –∏–∑ —ç—Ç–∏—Ö –∑–∞–¥–∞—á –ò–ò –≤—ã–ø–æ–ª–Ω—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤ —Å—Ñ–µ—Ä–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π?",
        "options": [
            "–í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö.",
            "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏ –ø—Ä–∏–±—ã–ª–∏, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä—ã–Ω–æ—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏."
        ],
        "correct": "–í—ã—è–≤–ª–µ–Ω–∏–µ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–∞—Ö."
    },
    {
        "q": "–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º —Ñ–∞–∫—Ç–æ—Ä–æ–º –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ò–ò –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?",
        "options": [
            "–ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º –∏ –Ω–µ –≤–º–µ—à–∏–≤–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å.",
            "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø—ã—Ç–∞."
        ],
        "correct": "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø—ã—Ç–∞."
    }
]

# ======================
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
# ======================
user_progress = {}
user_state = {}

# ======================
# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
# ======================
def main_menu():
    keyboard = [
        [KeyboardButton(text="ü§ñ –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞"), KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
        [KeyboardButton(text="üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"), KeyboardButton(text="üìÑ –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã")],
        [KeyboardButton(text="üîÆ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ")],
        [KeyboardButton(text="‚ùì FAQ")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# ======================
# FAQ –º–µ–Ω—é
# ======================
def faq_menu():
    keyboard = [[KeyboardButton(text=q)] for q in faq_data.keys()]
    keyboard.append([KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# ======================
# –ú–µ–Ω—é —Ç–µ—Å—Ç–∞
# ======================
def start_test_menu():
    keyboard = [
        [KeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")],
        [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# ======================
# –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
# ======================
async def send_test_question(message: types.Message, idx: int):
    q = test_questions[idx]
    total = len(test_questions)
    progress = f"–í–æ–ø—Ä–æ—Å {idx+1}/{total} üîπ" + "‚ö™"*(total-idx-1)
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=opt)] for opt in q["options"]] + [[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]],
        resize_keyboard=True
    )
    await message.answer(f"<b>{progress}</b>\n\n{q['q']}", reply_markup=keyboard)

# ======================
# Inline –∫–Ω–æ–ø–∫–∞ ¬´–í –º–µ–Ω—é¬ª
# ======================
def inline_back_to_menu():
    keyboard = [[InlineKeyboardButton(text="–í –º–µ–Ω—é", callback_data="back_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# ======================
# –°—Ç–∞—Ä—Ç /start
# ======================
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer_video(
        video="BAACAgQAAxkDAAIEgGi5kTsunsNKCxSgT62lGkOro6iLAAI8KgACIJ7QUfgrP_Y9_DJKNgQ",
        caption="ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=inline_back_to_menu()
    )

# ======================
# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–∫–∏
# ======================
@dp.callback_query()
async def callbacks(callback: types.CallbackQuery):
    if callback.data == "back_to_menu":
        await callback.message.answer("–°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä ‚ö°", reply_markup=main_menu())
        await callback.answer()

# ======================
# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –º–µ–Ω—é
# ======================
@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id

    # -------- –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ --------
    if message.text == "ü§ñ –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞":
        user_state[user_id] = "step1"
        text1 = (
            "‚ö° <b>–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –º–∞—Ç—Ä–∏—Ü—ã...</b> ‚ö°\n\n"
            "–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å—é –∫–∞—Ä—Ç–∏–Ω—É –ø–æ–ª–Ω–æ—Å—Ç—å—é, –ø–æ–¥–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–µ–Ω—Å–æ—Ä—ã –∏ –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞."
        )
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton(text="–î–∞–ª–µ–µ‚û°")]],
            resize_keyboard=True
        )
        await message.answer(text1, reply_markup=keyboard)

    elif user_state.get(user_id) == "step1" and message.text == "–î–∞–ª–µ–µ‚û°":
        user_state[user_id] = "step2"
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton(text="–î–∞–ª–µ–µ‚û°")]],
            resize_keyboard=True
        )
        # –§–æ—Ç–æ —Ç–∞–±–ª–∏—Ü—ã
        await message.answer_photo(
            photo="AgACAgQAAxkBAAIM0Gi9LaXmP4pct66F2FEKUu0WAAF84gACqMoxG5bI6VHDQO5xqprkdwEAAwIAA3kAAzYE",
            caption="üñ•Ô∏è –¢–∞–±–ª–∏—Ü–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–µ–ª",
            reply_markup=keyboard
        )

    elif user_state.get(user_id) == "step2" and message.text == "–î–∞–ª–µ–µ‚û°":
        del user_state[user_id]
        text2 = (
            "üîπ –¢–∞–±–ª–∏—Ü–∞ —Å–¥–µ–ª–∞–Ω–∞ –Ω–∞ –ø—Ä–∏–º–µ—Ä–Ω—ã—Ö —Ü–∏—Ñ—Ä–∞—Ö.\n\n"
            "‚Äî –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å ‚Äî –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
            "‚Äî –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ ‚Äî –¥—Ä—É–≥–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
            "‚Äî –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—ë (–ò–ò + —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç) ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π ‚ö°\n\n"
            "<b>–í–∞–∂–Ω–æ –≤–∏–¥–µ—Ç—å –≤—Å—é –∫–∞—Ä—Ç–∏–Ω—É —Ü–µ–ª–∏–∫–æ–º!</b>"
        )
        await message.answer(text2, reply_markup=main_menu())

    # -------- –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã --------
    elif message.text == "üìÑ –î–æ–≥–æ–≤–æ—Ä –æ—Ñ–µ—Ä—Ç—ã":
        await message.answer_document("BQACAgQAAxkBAAIFOGi6vNHLzH9IyJt0q7_V4y73FcdrAAKXGwACeDjZUSdnK1dqaQoPNgQ")

    # -------- –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å --------
    elif message.text == "üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å":
        await message.answer("üöÄ [–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ](https://traiex.gitbook.io/user-guides/ru/kak-zaregistrirovatsya-na-traiex)")

    # -------- FAQ --------
    elif message.text == "‚ùì FAQ":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å:", reply_markup=faq_menu())

    elif message.text in faq_data:
        await message.answer(faq_data[message.text])

    # -------- –¢–µ—Å—Ç --------
    elif message.text == "üîÆ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –≤–æ–∑–º–æ–∂–Ω–æ":
        instruction = (
            "üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å.\n"
            "–ò–ò ‚Äî —ç—Ç–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –∞ –Ω–µ –≤–æ–ª—à–µ–±–Ω–∞—è –ø–∞–ª–æ—á–∫–∞ ü§ñ."
        )
        await message.answer(instruction, reply_markup=start_test_menu())

    elif message.text == "üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç":
        user_progress[user_id] = 0
        await send_test_question(message, 0)

    elif user_id in user_progress:
        idx = user_progress[user_id]
        q = test_questions[idx]
        if message.text == q["correct"]:
            await message.answer("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            idx += 1
            if idx < len(test_questions):
                user_progress[user_id] = idx
                await send_test_question(message, idx)
            else:
                await message.answer("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!", reply_markup=main_menu())
                del user_progress[user_id]
        elif message.text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
            await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
            del user_progress[user_id]
        else:
            await message.answer("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.")

    # -------- –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é --------
    elif message.text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        user_state.pop(user_id, None)
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())

    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())

# ======================
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# ======================
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
