import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º parse_mode
bot = Bot(token=TOKEN, parse_mode="HTML")
dp = Dispatcher()

# --- –î–∞–Ω–Ω—ã–µ FAQ ---
faq_data = {
    "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π?": "üîπ –î–∞, –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∑–∞—â–∏—â—ë–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã.",
    "–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ —è –ø–æ—Ç–µ—Ä—è—é –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É?": "üîπ –í—ã —Å–º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ e-mail –∏–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚Äî –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–æ–ø–∞–¥—ë—Ç.",
    "–ù—É–∂–Ω–æ –ª–∏ –ø–ª–∞—Ç–∏—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å?": "üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è. –°–Ω–∞—á–∞–ª–∞ –∏–∑—É—á–∞–µ—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø–æ—Ç–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —Ä–µ—à–µ–Ω–∏–µ.",
    "–ï—Å—Ç—å –ª–∏ —Å–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∏—Å—Å–∏–∏?": "üîπ –í—Å–µ –∫–æ–º–∏—Å—Å–∏–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ –∏ –∑–∞—Ä–∞–Ω–µ–µ —É–∫–∞–∑–∞–Ω—ã.",
    "–ú–æ–∂–Ω–æ –ª–∏ –≤—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç?": "üîπ –°—Ä–µ–¥—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –±–µ–∑ –∑–∞–º–æ—Ä–æ–∑–∫–∏.",
    "–ê –µ—Å–ª–∏ —è –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?": "üîπ –ù–µ —Å—Ç—Ä–∞—à–Ω–æ üôÇ –ï—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.",
    "–ß—Ç–æ, –µ—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å?": "üîπ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞. –î–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É –≤–∞—Å.",
    "–ù—É–∂–Ω–æ –ª–∏ —Ç—Ä–∞—Ç–∏—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏?": "üîπ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è.",
    "–ï—Å—Ç—å –ª–∏ –≥–∞—Ä–∞–Ω—Ç–∏–∏?": "üîπ –ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —á–µ—Å—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã."
}

# --- –¢–µ—Å—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã ---
test_questions = [
    {
        "q": "ü§ñ –ß—Ç–æ —Ç–∞–∫–æ–µ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç (–ò–ò) –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?",
        "options": ["üìà –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö", "üîÆ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±—É–¥—É—â–µ–µ"],
        "correct": "üìà –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    },
    {
        "q": "üìä –ö–∞–∫ –ò–ò –ø–æ–º–æ–≥–∞–µ—Ç –∞–Ω–∞–ª–∏–∑—É —Ä—ã–Ω–∫–∞?",
        "options": ["‚ö° –ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –≤—ã—è–≤–ª—è—Ç—å —Ç—Ä–µ–Ω–¥—ã", "‚ùå –ü–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–º–µ–Ω—è–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞"],
        "correct": "‚ö° –ë—ã—Å—Ç—Ä–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –≤—ã—è–≤–ª—è—Ç—å —Ç—Ä–µ–Ω–¥—ã"
    },
    {
        "q": "ü§ù –†–æ–ª—å –ò–ò –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏?",
        "options": ["‚ùå –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–±–∏—Ä–∞–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å —á–µ–ª–æ–≤–µ–∫–∞", "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ–º"],
        "correct": "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ–º"
    },
    {
        "q": "üîé –ß—Ç–æ –ò–ò —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –¥–µ–ª–∞–µ—Ç –≤ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö?",
        "options": ["‚ö†Ô∏è –í—ã—è–≤–ª—è–µ—Ç –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ —Å—Ö–µ–º—ã", "üí∞ –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–±—ã–ª—å –≤—Å–µ–≥–¥–∞"],
        "correct": "‚ö†Ô∏è –í—ã—è–≤–ª—è–µ—Ç –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–µ —Å—Ö–µ–º—ã"
    },
    {
        "q": "üéØ –ö–ª—é—á–µ–≤–æ–π —Ñ–∞–∫—Ç–æ—Ä –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ò–ò?",
        "options": ["üåÄ –ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º", "‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —á–µ–ª–æ–≤–µ–∫–æ–º"],
        "correct": "‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ —á–µ–ª–æ–≤–µ–∫–æ–º"
    }
]

user_progress = {}
user_state = {}  # –¥–ª—è —à–∞–≥–æ–≤ –æ–±—â–µ–π –∫–∞—Ä—Ç–∏–Ω—ã

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
def main_menu():
    keyboard = [
        [KeyboardButton(text="üìä –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞"), KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
        [KeyboardButton(text="üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"), KeyboardButton(text="üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã")],
        [KeyboardButton(text="‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ò–ò"), KeyboardButton(text="‚ùì FAQ AI")],
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- –ú–µ–Ω—é FAQ ---
def faq_menu():
    keyboard = [[KeyboardButton(text=q)] for q in faq_data.keys()]
    keyboard.append([KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- –ú–µ–Ω—é —Ç–µ—Å—Ç–∞ ---
def start_test_menu():
    keyboard = [
        [KeyboardButton(text="üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")],
        [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ ---
async def send_test_question(message: types.Message, idx: int):
    q = test_questions[idx]
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=opt)] for opt in q["options"]] + [[KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]],
        resize_keyboard=True
    )
    await message.answer(f"–®–∞–≥ {idx+1}/{len(test_questions)}\n{q['q']}", reply_markup=keyboard)

# --- Inline –∫–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é" ---
def inline_back_to_menu():
    keyboard = [[InlineKeyboardButton(text="üè† –í –º–µ–Ω—é", callback_data="back_to_menu")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    text = "üöÄ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ AI.\n–í—ã–±–∏—Ä–∞–π –ø—É—Ç—å üëá"
    await message.answer(text, reply_markup=main_menu())

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–æ–∫ ---
@dp.callback_query()
async def callbacks(callback: types.CallbackQuery):
    if callback.data == "back_to_menu":
        await callback.message.answer("üèÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())
        await callback.answer()

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é ---
@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id
    text = message.text

    # --- –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞ ---
    if text == "üìä –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞":
        user_state[user_id] = "step1"
        text1 = (
            "üìä –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω—É –ø–æ–ª–Ω–æ—Å—Ç—å—é, "
            "–Ω—É–∂–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –≥–ª–∞–∑–∞–º–∏ –∏ —Ä–∞–∑—É–º–æ–º AI. –í–æ—Ç —Ç–∞–±–ª–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—é—Ç —Ä–µ–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–µ–ª:"
        )
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton("–î–∞–ª–µ–µ‚û°")]],
            resize_keyboard=True
        )
        await message.answer(text1, reply_markup=keyboard)

    elif user_state.get(user_id) == "step1" and text == "–î–∞–ª–µ–µ‚û°":
        user_state[user_id] = "step2"
        keyboard = ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton("‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"), KeyboardButton("–î–∞–ª–µ–µ‚û°")]],
            resize_keyboard=True
        )
        # –§–æ—Ç–æ —Ç–∞–±–ª–∏—Ü—ã
        await message.answer_photo(photo="AgACAgQAAxkBAAIM0Gi9LaXmP4pct66F2FEKUu0WAAF84gACqMoxG5bI6VHDQO5xqprkdwEAAwIAA3kAAzYE",
                                 reply_markup=keyboard)

    elif user_state.get(user_id) == "step2" and text == "–î–∞–ª–µ–µ‚û°":
        del user_state[user_id]
        text2 = (
            "üí° –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–∏–º–µ—Ä–Ω–∞—è, –Ω–æ —Å–º—ã—Å–ª —è—Å–µ–Ω:\n"
            "‚Äî –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π\n"
            "‚Äî –¥–µ–ª–∞—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–µ–¥–Ω–∏–π\n"
            "‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å AI + —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞ –∫–æ—Ä–æ—Ç–∫–∏–π —Å—Ä–æ–∫\n"
            "üåü –í–∏–¥–µ—Ç—å –≤—Å—é –∫–∞—Ä—Ç–∏–Ω—É —Ü–µ–ª–∏–∫–æ–º –∫—Ä–∞–π–Ω–µ –≤–∞–∂–Ω–æ!"
        )
        await message.answer(text2, reply_markup=main_menu())

    # --- –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ñ–µ—Ä—Ç—ã ---
    elif text == "üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã":
        file_id = "BQACAgQAAxkBAAIFOGi6vNHLzH9IyJt0q7_V4y73FcdrAAKXGwACeDjZUSdnK1dqaQoPNgQ"
        await message.answer_document(file_id)

    # --- –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å ---
    elif text == "üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å":
        await message.answer("üåê –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: https://traiex.gitbook.io/user-guides/ru/kak-zaregistrirovatsya-na-traiex")

    # --- FAQ ---
    elif text == "‚ùì FAQ AI":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", reply_markup=faq_menu())
    elif text in faq_data:
        # –ü–æ–¥—Å–∫–∞–∑–∫–∞ AI –¥–ª—è –º–æ—Ç–∏–≤–∞—Ü–∏–∏
        hint = "üí° AI —Å–æ–≤–µ—Ç: –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∏—Å–∫–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø–æ–≤—ã—à–∞–µ—Ç —É—Å–ø–µ—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π."
        await message.answer(f"{faq_data[text]}\n\n{hint}")

    # --- –¢–µ—Å—Ç ---
    elif text == "‚ú® –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ò–ò":
        await message.answer("üìò –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å:", reply_markup=start_test_menu())
    elif text == "üöÄ –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç":
        user_progress[user_id] = 0
        await send_test_question(message, 0)

    elif user_id in user_progress:
        idx = user_progress[user_id]
        q = test_questions[idx]
        if text == q["correct"]:
            await message.answer("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            idx += 1
            if idx < len(test_questions):
                user_progress[user_id] = idx
                await send_test_question(message, idx)
            else:
                await message.answer("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!", reply_markup=main_menu())
                del user_progress[user_id]
        elif text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
            await message.answer("üèÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())
            del user_progress[user_id]
        else:
            await message.answer("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")

    elif text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        user_state.pop(user_id, None)
        await message.answer("üèÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())

    else:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())

# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
