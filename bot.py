import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

user_state = {}      # —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_goal_data = {}  # –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    keyboard = [
        [KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# –†–∞—Å—á—ë—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π
def calculate_investment(goal_amount, monthly_invest, annual_rate=135):
    monthly_rate = annual_rate / 12 / 100
    total = 0
    months = 0
    while total < goal_amount:
        total += monthly_invest
        profit = total * monthly_rate
        total += profit
        months += 1
    return months

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_message(message: types.Message):
    user_id = message.from_user.id

    # –°—Ç–∞—Ä—Ç–æ–≤—ã–π –≤—ã–±–æ—Ä
    if message.text == "üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç":
        user_state[user_id] = "goal_choice"
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="–ú–∞—à–∏–Ω–∞"), KeyboardButton(text="–î–æ–º"), KeyboardButton(text="–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥")],
                [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        )
        await message.answer("–ö–∞–∫–æ–≤–∞ —Ç–≤–æ—è —Ü–µ–ª—å?", reply_markup=keyboard)
        return

    # –í—ã–±–æ—Ä —Ü–µ–ª–∏
    if user_state.get(user_id) == "goal_choice":
        user_goal_data[user_id] = {"goal_type": message.text}
        if message.text == "–ú–∞—à–∏–Ω–∞":
            keyboard = ReplyKeyboardMarkup(
                keyboard=[
                    [KeyboardButton(text="100 000 ‚ÇΩ"), KeyboardButton(text="500 000 ‚ÇΩ"), KeyboardButton(text="1 000 000 ‚ÇΩ")],
                    [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
                ],
                resize_keyboard=True
            )
            user_state[user_id] = "goal_amount"
            await message.answer("–ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞—à–∏–Ω—ã?", reply_markup=keyboard)
            return
        elif message.text == "–î–æ–º":
            keyboard = ReplyKeyboardMarkup(
                keyboard=[
                    [KeyboardButton(text="3 000 000 ‚ÇΩ"), KeyboardButton(text="5 000 000 ‚ÇΩ"), KeyboardButton(text="15 000 000 ‚ÇΩ")],
                    [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
                ],
                resize_keyboard=True
            )
            user_state[user_id] = "goal_amount"
            await message.answer("–ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ–º–∞?", reply_markup=keyboard)
            return
        else:
            await message.answer("–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ –ø–æ–∫–∞ –Ω–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è", reply_markup=main_menu())
            user_state.pop(user_id, None)
            return

    # –í—ã–±–æ—Ä –µ–∂–µ–º–µ—Å—è—á–Ω–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏
    if user_state.get(user_id) == "goal_amount":
        user_goal_data[user_id]["goal_amount"] = int(message.text.replace(" ‚ÇΩ","").replace(" ",""))
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="10 000 ‚ÇΩ"), KeyboardButton(text="20 000 ‚ÇΩ"), KeyboardButton(text="30 000 ‚ÇΩ")],
                [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
            ],
            resize_keyboard=True
        )
        user_state[user_id] = "monthly_invest"
        await message.answer("–°–∫–æ–ª—å–∫–æ –≤—ã –≥–æ—Ç–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –º–µ—Å—è—Ü?", reply_markup=keyboard)
        return

    # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç
    if user_state.get(user_id) == "monthly_invest":
        user_goal_data[user_id]["monthly_invest"] = int(message.text.replace(" ‚ÇΩ","").replace(" ",""))
        goal_amount = user_goal_data[user_id]["goal_amount"]
        monthly_invest = user_goal_data[user_id]["monthly_invest"]
        months = calculate_investment(goal_amount, monthly_invest)
        years = months // 12
        months_remain = months % 12
        await message.answer(
            f"–° –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –ò–ò-–±–æ—Ç–∞, –ø—Ä–∏ –≤–∞—à–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö {monthly_invest} ‚ÇΩ –≤ –º–µ—Å—è—Ü, "
            f"–≤—ã —Å–º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å {user_goal_data[user_id]['goal_type']} —Å—Ç–æ–∏–º–æ—Å—Ç—å—é {goal_amount} ‚ÇΩ —á–µ—Ä–µ–∑ {years} –ª–µ—Ç –∏ {months_remain} –º–µ—Å—è—Ü–µ–≤.",
            reply_markup=main_menu()
        )
        user_state.pop(user_id, None)
        user_goal_data.pop(user_id, None)
        return

    # –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
    if message.text == "‚¨Ö –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é":
        user_state.pop(user_id, None)
        user_goal_data.pop(user_id, None)
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üëá", reply_markup=main_menu())
        return

    # –õ—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
