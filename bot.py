import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)

TOKEN = os.getenv("API_Token")
if not TOKEN:
    raise ValueError("API_Token –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# –ö–Ω–æ–ø–∫–∞ –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º
def show_menu_button():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="¬´–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é¬ª", callback_data="show_menu")]
        ]
    )

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Å–Ω–∏–∑—É)
def reply_main_menu():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
            [KeyboardButton(text="üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å")],
            [KeyboardButton(text="üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã")],
            [KeyboardButton(text="ü§ñ –ß—Ç–æ —Ç–∞–∫–æ–µ –±–æ—Ç –Ω–∞ –ò–ò")],
            [KeyboardButton(text="‚ùì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã")]
        ],
        resize_keyboard=True
    )

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    text_content = (
        "–°—Ç–∞—Ä—Ç\n\n"
        "–ò—Ç–∞–∫ –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ–π –∫–∞—Ä—Ç–∏–Ω—ã —Ü–µ–ª–∏–∫–æ–º –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é.\n"
        "–î–ª—è —á–µ–≥–æ –Ω–∞–º –Ω—É–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤—Å—é –∫–∞—Ä—Ç–∏–Ω—É, –¥–∞ –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–æ–ª—å–∫–æ —Ç–∞–∫ –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –º–∏–Ω—É—Å—ã –∏ –ø–ª—é—Å—ã "
        "–∏ –æ—Ç–∫–æ—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ö —Ç–∞–∫ –∫–∞–∫ –º—ã —ç—Ç–æ–≥–æ —Ö–æ—Ç–∏–º, –∞ –Ω–µ —Ç–∞–∫ –∫–∞–∫ –Ω–∞–º –¥–∏–∫—Ç—É—é—Ç '–æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞'.\n\n"
        "–¢–∞–∫ –∫–∞–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä –ø—Ä–æ —Ñ–∏–Ω–∞–Ω—Å—ã, –æ–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Ç–∞–∫–æ–≤–∞, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞ (–Ω–∞–π–º), "
        "—Ç–æ –ø—Ä–∏ –Ω–µ—Å–ª–æ–∂–Ω–æ–º –ø–æ–¥—Å—á—ë—Ç–µ –º—ã –ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –∏–º–µ—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É, –º–∞—à–∏–Ω—É, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–µ—Ç—è–º, "
        "–æ—Ç–¥—ã—Ö —Ä–∞–∑ –≤ –≥–æ–¥, –Ω–∞–º –Ω—É–∂–Ω–æ –æ–∫–æ–ª–æ ... —Å—É–º–º—ã –¥–µ–Ω–µ–≥.\n"
        "–ï—Å–ª–∏ –≤–∑—è—Ç—å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∏ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å, –≤—ã—Ö–æ–¥–∏—Ç –Ω—É–∂–Ω–æ –æ–∫–æ–ª–æ ... –ª–µ—Ç –∂–∏–∑–Ω–∏ –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–π –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç–µ, "
        "—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∂–µ–ª–∞–µ–º–æ–µ.\n\n"
        "–û—á–µ–Ω—å –ø–ª–∞—á–µ–≤–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è.\n\n"
        "–ù–æ –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏ –¥–µ–Ω–µ–≥ –µ—â—ë —Ç–∞–∫–æ–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–∞–∫ –±–æ—Ç –Ω–∞ –ò–ò, "
        "—Ç–æ –Ω–∞–º —Ö–≤–∞—Ç–∞–µ—Ç (–ø–æ–¥—Å—á–µ—Ç –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å) —Ç–∞–∫–æ–µ-—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã–±–æ—Ä –∑–∞ –≤–∞–º–∏.\n"
        "–•–æ—Ç–∏—Ç–µ –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: –∞ –∏–º–µ–Ω–Ω–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç + –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç, "
        "–∏–ª–∏ –æ—Å—Ç–∞–Ω–µ—Ç–µ—Å—å —Å –æ–¥–Ω–∏–º –∏—Å—Ç–æ—á–Ω–∏–∫–æ–º –¥–æ—Ö–æ–¥–∞?"
    )

    await message.answer(
        text_content,
        reply_markup=show_menu_button()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é"
@dp.callback_query()
async def callbacks(callback: types.CallbackQuery):
    if callback.data == "show_menu":
        await callback.message.answer("–ú–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ ‚úÖ", reply_markup=reply_main_menu())
        await callback.message.delete()  # —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥ —Ç–µ–∫—Å—Ç–æ–º
    await callback.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
