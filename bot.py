import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.bot import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ Environment Variables Render
TOKEN = os.getenv("API_Token")
if not TOKEN:
    raise ValueError("API_Token –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å default properties
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (ReplyKeyboard, 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥)
def main_menu():
    keyboard = [
        [KeyboardButton(text="üìä –û–±—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∞"), KeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç")],
        [KeyboardButton(text="üí∞ –ì–æ—Ç–æ–≤ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å"), KeyboardButton(text="üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –æ—Ñ–µ—Ä—Ç—ã")],
        [KeyboardButton(text="ü§ñ –ß—Ç–æ —Ç–∞–∫–æ–µ –±–æ—Ç –Ω–∞ –ò–ò"), KeyboardButton(text="‚ùì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# –ö–Ω–æ–ø–∫–∞ "–í –º–µ–Ω—é"
def back_to_menu():
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–í –º–µ–Ω—é")]],
        resize_keyboard=True
    )

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    file_id = "BAACAgQAAxkDAAIEgGi5kTsunsNKCxSgT62lGkOro6iLAAI8KgACIJ7QUfgrP_Y9_DJKNgQ"
    await message.answer_video(
        video=file_id,
        caption="–í–æ—Ç –≤–∏–¥–µ–æ —Å –æ–±—â–µ–π –∫–∞—Ä—Ç–∏–Ω–æ–π üìä",
        reply_markup=back_to_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@dp.message()
async def handle_message(message: types.Message):
    if message.text == "–í –º–µ–Ω—é":
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=main_menu())
    else:
        await message.answer(f"–í—ã –Ω–∞–∂–∞–ª–∏: {message.text}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
