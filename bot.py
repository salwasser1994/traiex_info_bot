import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import asyncio

API_TOKEN = os.getenv("API_TOKEN")  # –¢–æ–∫–µ–Ω –∏–∑ Render Environment Variables

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")],
        [KeyboardButton(text="üìä –ö—É—Ä—Å—ã"), KeyboardButton(text="üì∞ –ù–æ–≤–æ—Å—Ç–∏")],
        [KeyboardButton(text="‚ÑπÔ∏è –û –±–∏—Ä–∂–µ")]
    ],
    resize_keyboard=True
)

# --- –°–ø–∏—Å–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã ---
faq = {
    "—á—Ç–æ —Ç–∞–∫–æ–µ traiex": "üí° Traiex ‚Äî —ç—Ç–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–∞—è –±–∏—Ä–∂–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏.",
    "–∫–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è": "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ Traiex. –ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ—á—Ç—É –∏ –ø—Ä–∏–¥—É–º–∞—Ç—å –ø–∞—Ä–æ–ª—å.",
    "–∫–∞–∫–∏–µ –∫–æ–º–∏—Å—Å–∏–∏": "üí∞ –ö–æ–º–∏—Å—Å–∏—è –∑–∞ —Ç–æ—Ä–≥–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 0.1%. –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ –≤—ã–≤–æ–¥ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Å–ø–æ—Å–æ–±–∞.",
    "–ø–æ–¥–¥–µ—Ä–∂–∫–∞": "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ email support@traiex.com."
}


# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Traiex.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.",
        reply_markup=main_menu
    )


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ ---
@dp.message()
async def handle_question(message: types.Message):
    text = message.text.lower().strip()

    if text in faq:
        await message.answer(faq[text])
    elif text == "‚ùì –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        await message.answer("‚úç –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å.")
    elif text == "üìä –∫—É—Ä—Å—ã":
        await message.answer("üìà –ö—É—Ä—Å BTC: 65,000$, ETH: 3,200$ (–ø—Ä–∏–º–µ—Ä).")
    elif text == "üì∞ –Ω–æ–≤–æ—Å—Ç–∏":
        await message.answer("üì∞ –°–µ–≥–æ–¥–Ω—è BTC –≤—ã—Ä–æ—Å –Ω–∞ 5%, –∞ ETH ‚Äî –Ω–∞ 3%.")
    elif text == "‚ÑπÔ∏è –æ –±–∏—Ä–∂–µ":
        await message.answer("üí° Traiex ‚Äî —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∫—Ä–∏–ø—Ç–æ–±–∏—Ä–∂–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ–π.")
    else:
        await message.answer("ü§î –Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –ø–æ-–¥—Ä—É–≥–æ–º—É.")


# --- –ó–∞–ø—É—Å–∫ ---
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
