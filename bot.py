import logging
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
import asyncio

logging.basicConfig(level=logging.INFO)

# === –ö–æ–Ω—Ñ–∏–≥ ===
BOT_TOKEN = "8473772441:AAHpXfxOxR-OL6e3GSfh4xvgiDdykQhgTus"
ADMIN_ID = -1003081706651  # —Ç–≤–æ–π –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}


# === –°—Ç–∞—Ä—Ç ===
@dp.message(Command("start"))
async def cmd_start(message: Message):
    user_data[message.from_user.id] = {}  # –æ–±–Ω—É–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å

    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–•–æ—á—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è üí°")],
            [KeyboardButton(text="–ù–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üö´")]
        ],
        resize_keyboard=True
    )

    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üëã\n\n"
        "–Ø ‚Äî —Ç–≤–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ê–ª–µ–∫—Å–µ–π –§–∏–Ω–∞–Ω—Å–æ–≤–∏—á. "
        "–ú–æ—è —Ü–µ–ª—å ‚Äî –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –º–æ–∂–Ω–æ –ø—Ä–∏—É–º–Ω–æ–∂–∏—Ç—å –∫–∞–ø–∏—Ç–∞–ª üìà\n\n"
        "–°–∫–∞–∂–∏ —á–µ—Å—Ç–Ω–æ: –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã?",
        reply_markup=kb
    )


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å–∞ ===
@dp.message(F.text == "–•–æ—á—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è üí°")
async def handle_interested(message: Message):
    user_data[message.from_user.id]["interest"] = "–î–∞"

    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–î–æ–º üè†"), KeyboardButton(text="–ú–∞—à–∏–Ω–∞ üöó")],
            [KeyboardButton(text="–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ üí∏")]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "–û—Ç–ª–∏—á–Ω–æ üôå –†–∞–¥, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!\n\n"
        "–°–∫–∞–∂–∏, –∫–∞–∫–∞—è —Ü–µ–ª—å –¥–ª—è —Ç–µ–±—è –≤–∞–∂–Ω–µ–µ –≤—Å–µ–≥–æ —Å–µ–π—á–∞—Å?",
        reply_markup=kb
    )


@dp.message(F.text == "–ù–µ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üö´")
async def handle_not_interested(message: Message):
    user_data[message.from_user.id]["interest"] = "–ù–µ—Ç"

    await message.answer(
        "–ü–æ–Ω—è–ª —Ç–µ–±—è üôÇ\n"
        "–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —Ç–æ–º, –∫–∞–∫ –ª—é–¥–∏ –¥–æ—Å—Ç–∏–≥–∞—é—Ç —Å–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π, "
        "–º–æ–∂–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç ‚Äî —è –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å."
    )


# === –¶–µ–ª—å ===
@dp.message(F.text.in_(["–î–æ–º üè†", "–ú–∞—à–∏–Ω–∞ üöó", "–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥ üí∏"]))
async def handle_goal(message: Message):
    user_data[message.from_user.id]["goal"] = message.text

    if message.text == "–î–æ–º üè†":
        kb = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="3 000 000 ‚ÇΩ"), KeyboardButton(text="5 000 000 ‚ÇΩ")],
                [KeyboardButton(text="10 000 000 ‚ÇΩ")]
            ],
            resize_keyboard=True
        )
    elif message.text == "–ú–∞—à–∏–Ω–∞ üöó":
        kb = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="1 000 000 ‚ÇΩ"), KeyboardButton(text="2 000 000 ‚ÇΩ")],
                [KeyboardButton(text="3 000 000 ‚ÇΩ")]
            ],
            resize_keyboard=True
        )
    else:  # –ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥
        kb = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="50 000 ‚ÇΩ/–º–µ—Å"), KeyboardButton(text="100 000 ‚ÇΩ/–º–µ—Å")],
                [KeyboardButton(text="200 000 ‚ÇΩ/–º–µ—Å")]
            ],
            resize_keyboard=True
        )

    await message.answer(
        f"–•–æ—Ä–æ—à–æ üëç –î–∞–≤–∞–π —É—Ç–æ—á–Ω–∏–º.\n\n"
        f"–°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ —Ç–µ–±–µ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ü–µ–ª—å ¬´{message.text}¬ª?",
        reply_markup=kb
    )


# === –°—É–º–º–∞ ===
@dp.message(F.text.regexp(r"[0-9 ]+‚ÇΩ|‚ÇΩ/–º–µ—Å"))
async def handle_sum(message: Message):
    user_data[message.from_user.id]["sum"] = message.text

    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º üë®‚Äçüíº")]
        ],
        resize_keyboard=True
    )
    await message.answer(
        f"–û—Ç–ª–∏—á–Ω–æ üëå –° —Ç–≤–æ–µ–π —Ü–µ–ª—å—é –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—É–º–º–æ–π —ç—Ç–æ –≤–ø–æ–ª–Ω–µ —Ä–µ–∞–ª—å–Ω–æ.\n\n"
        "–Ø –º–æ–≥—É –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –Ω–∞—á–∞—Ç—å –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ —ç—Ç–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É üöÄ\n\n"
        "–•–æ—á–µ—à—å, —è —Å–≤—è–∂—É —Ç–µ–±—è —Å –∂–∏–≤—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä—è—Å–Ω–∏—Ç –¥–µ—Ç–∞–ª–∏?",
        reply_markup=kb
    )


# === –õ–∏–¥ ===
@dp.message(F.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º üë®‚Äçüíº")
async def handle_contact(message: Message):
    await message.answer(
        "–°—É–ø–µ—Ä üéâ –Ø –ø–µ—Ä–µ–¥–∞–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞—à–µ–º—É –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É. "
        "–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ —ç—Ç–æ–º —á–∞—Ç–µ üë®‚Äçüíª"
    )

    data = user_data.get(message.from_user.id, {})
    interest = data.get("interest", "‚Äî")
    goal = data.get("goal", "‚Äî")
    summ = data.get("sum", "‚Äî")

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω-—á–∞—Ç
    await bot.send_message(
        chat_id=ADMIN_ID,
        text=(
            f"üî• –ù–æ–≤—ã–π –ª–∏–¥!\n\n"
            f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username}\n"
            f"–ò–º—è: {message.from_user.full_name}\n"
            f"ID: {message.from_user.id}\n\n"
            f"üìå –ò–Ω—Ç–µ—Ä–µ—Å: {interest}\n"
            f"üéØ –¶–µ–ª—å: {goal}\n"
            f"üí∞ –°—É–º–º–∞: {summ}\n\n"
            f"‚úÖ –•–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º üë®‚Äçüíº"
        )
    )


# === –ó–∞–ø—É—Å–∫ ===
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())